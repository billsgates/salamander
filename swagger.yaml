openapi: 3.0.0
info:
  description: Salamander is the backend api server for HermitCrab.
  version: 1.0.1
  title: Salamander api server
servers:
  - url: http://localhost:5000/api/v1
tags:
  - name: auth
    description: Authentication
  - name: user
    description: User
  - name: rooms
    description: Rooms
  - name: services
    description: Services
  - name: applications
    description: Application
paths:
  /auth/signup:
    post:
      tags:
        - auth
      summary: sign up
      description: ''
      operationId: signUp
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        "201":
          description: successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /auth/signin:
    post:
      tags:
        - auth
      summary: sign in
      description: ''
      operationId: signIn
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /user:
    get:
      tags:
        - user
      summary: get user
      description: ''
      operationId: getUser
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - user
      summary: update user info
      description: ''
      operationId: updateUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
                type: object
                properties:
                  name: 
                    type: string
                    example: Carolyn
                  email:
                    type: string
                    example: Carolyn@example.com
                  image_url:
                    type: string
                    format: url
      responses:
        "201":
          description: successfully update user
  /user/{id}/rating:
    get:
      tags:
        - user
      summary: get user rating by id
      description: ''
      operationId: getUserRating
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
    patch:
      tags:
        - user
      summary: update user rating
      description: ''
      operationId: updateRating
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  example: 4
      responses:
        "201":
          description: successfully update user rating
  /rooms:
    post:
      tags:
        - rooms
      summary: create a room
      description: ''
      operationId: createRoom
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
      responses:
        "200":
          description: successfully created a room
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: integer
                    example: 1
    get:
      tags:
        - rooms
      summary: get current joined rooms and status
      description: ''
      operationId: getMenuInfo
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsResponse'
  /rooms/public:
    get:
      tags:
        - rooms
      summary: get public rooms
      description: ''
      operationId: getPublicRooms
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomPublic'
  /rooms/{id}:
    get:
      tags:
        - rooms
      summary: get room info by room id
      description: ''
      operationId: getRoom
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomInfoResponse'
    patch:
      tags:
        - rooms
      summary: update room info by room id
      description: ''
      operationId: updateRoom
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
      responses:
        "201":
          description: successfully update room
    delete:
      tags:
        - rooms
      summary: delete room
      description: ''
      operationId: deleteRoom
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
  /rooms/{id}/members:
    get:
      tags:
        - rooms
      summary: get all members of room 
      description: ''
      operationId: getAllRoomMembers
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersResponse'
  /rooms/{id}/round:
    post:
      tags:
        - rooms
      summary: create new round of room 
      description: ''
      operationId: createRoomRound
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                starting_time: 
                  type: string
                  example: '2020-05-15'
                round_interval: 
                  type: integer
                  format: month
                  example: 12
                payment_deadline: 
                  type: integer
                  example: 1
                is_add_calendar:
                  type: boolean
                  example: true
      responses:
        "201":
          description: successfully set room start Date
    delete:
      tags:
        - rooms
      summary: remove current round of room 
      description: ''
      operationId: removeRoomRound
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: successfully remove current round
  /rooms/{id}/invitation:
    post:
      tags:
        - rooms
      summary: generate invitation code
      description: ''
      operationId: postInvitationCode
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
    get:
      tags:
        - rooms
      summary: get all valid invitation codes
      description: ''
      operationId: getAllInvitationCodes
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    invitation_code:
                      type: string
                  example:
                  - code: "skda35d"
  /rooms/{id}/application:
    post:
      tags:
        - rooms
      summary: apply to join room
      description: ''
      operationId: applyRoom
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
    get:
      tags:
        - rooms
      summary: get all applications of the room
      description: ''
      operationId: getApplications
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
  /rooms/join:
    post:
      tags:
        - rooms
      summary: join room by invitation code
      description: ''
      operationId: joinRoom
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomJoinRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: integer
                    example: 1
  /rooms/join/{code}:
    post:
      tags:
        - rooms
      summary: join room by url
      description: ''
      operationId: joinRoomByUrl
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: code
          description: invitation code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: integer
                    example: 1
  /services:
    get:
      tags:
        - services
      summary: get services
      description: ''
      operationId: getServices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
  /participant:
    delete:
      tags:
        - participant
      summary: delete participant from rooms
      description: ''
      operationId: deleteParticipant
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                room_id:
                  type: integer
                  example: 2
      responses:
        "204":
          description: successfully delete participant from rooms
  /participant/status:
    patch:
      tags:
        - participant
      summary: change parcipant payment status
      description: ''
      operationId: updateParticipantStatus
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
                type: object
                properties:
                  user_id: 
                    type: integer
                    example: 1
                  room_id:
                    type: integer
                    example: 2
                  payment_status:
                    $ref: '#/components/schemas/PaymentStatus'
      responses:
        "201":
          description: successfully update participant payment status
  /application/accept:
    post:
      tags:
        - applications
      summary: accept room application
      description: ''
      operationId: acceptApplication
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  application_id: 
                    type: integer
                    example: 1
      responses:
        "200":
          description: OK
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: kevin yu
        email:
          type: string
          format: email
          example: kevin@ntu.im
        phone:
          type: string
          example: 0912345678
        rating:
          type: number
          example: 4.6
        rating_count:
          type: integer
          example: 10
    Rating:
      type: object
      properties:
        rating:
          type: number
          example: 4.8
        rating_count:
          type: integer
          example: 10
    SignupRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - name
      - email
      - password
      example:
        name: test
        email: test@ntu.im
        password: test
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
      example:
        email: kevin@ntu.im
        password: kevin
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzEwMzgyMjQuNzQ0MzI0MiwidXNlciI6eyJJRCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIsIlVzZXJuYW1lIjoiemhhc2hrZXZ5Y2giLCJQYXNzd29yZCI6IjQyODYwMTc5ZmFiMTQ2YzZiZDAyNjlkMDViZTM0ZWNmYmY5Zjk3YjUifX0.3dsyKJQ-HZJxdvBMui0Mzgw6yb6If9aB8imGhxMOjsk
    Room:
      type: object
      properties:
        id:
          type: integer
          example: 1
        announcement:
          type: string
        is_public:
          type: boolean
        room_status:
          $ref: '#/components/schemas/RoomStatus'
        starting_time:
          type: string
          format: date-time
        ending_time:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        max_count:
          type: integer
          example: 5
        admin_id:
          type: integer
          example: 1
        service_id:
          type: integer
          example: 1
        plan_name:
          type: string
          example: Premium
    RoomRequest:
      type: object
      properties:
        max_count:
          type: integer
        admin_id:
          type: integer
        service_id:
          type: integer
        plan_name:
          type: string
        is_public:
          type: boolean
        announcement:
          type: string
      required:
      - max_count
      - service_id
      - plan_name
      - is_public
      example:
        max_count: 5
        service_id: 1
        plan_name: Premium
        is_public: true
    RoomJoinRequest:
      type: object
      properties:
        invitation_code:
          type: string
      required:
      - invitation_code
    Service:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Netflix
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      properties:
        plan_name:
          type: string
          example: Premium
        cost:
          type: integer
          example: 390
        max_count:
          type: integer
          example: 4
    Participation:
      type: object
      properties:
        user_id:
          type: integer
        room_id:
          type: integer
        is_host:
          type: boolean
      required:
      - user_id
      - room_id
      - is_host
      example:
        max_count: 1
        service_id: 1
        plan_name: true
    Admin:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        rating:
          type: number
        phone:
          type: string
      example:
        name: Kevin Yu
        email: kevin@ntu.im
        rating: 4.2
        phone: 0912345678
    Application:
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
      example:
        user_id: 1
        name: Kevin Yu
    Member:
      type: object
      properties:
        user_id:
          type: integer
        user_name:
          type: string
        payment_status:
          $ref: '#/components/schemas/PaymentStatus'
      example:
        user_id: 1
        user_name: Frank Chen
        payment_status: unpaid
    RoomPublic:
      type: object
      properties:
        room_id:
          type: integer
          example: 1
        admin_name:
          type: string
          example: Kevin Yu
        admin_rating:
          type: number
          example: 4.2
        service_name:
          type: string
          example: Netflix
        plan_name:
          type: string
          example: Premium
        cost:
          type: integer
          example: 720
        max_count:
          type: integer
          example: 4
        member_count:
          type: integer
          example: 2
    RoomItem:
      type: object
      properties:
        room_id:
          type: integer
          example: 1
        service_name:
          type: string
          example: Netflix
        plan_name:
          type: string
          example: Premium
        is_host:
          type: boolean
          example: true
        cost:
          type: integer
          example: 720
        payment_status:
          $ref: '#/components/schemas/PaymentStatus'
        room_status:
          $ref: '#/components/schemas/RoomStatus'
    RoomsResponse:
      type: array
      items:
        $ref: '#/components/schemas/RoomItem'
    MembersResponse:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    RoomInfoResponse:
      type: object
      properties:
        room_id:
          type: integer
          example: 1
        is_public:
          type: boolean
          example: false
        announcement:
          type: string
          example: Hi! This is the announcement from administrator
        max_count:
          type: integer
          example: 4
        room_status:
          $ref: '#/components/schemas/RoomStatus'
        service_id:
          type: integer
          example: 1
        service_name:
          type: string
          example: Netflix
        plan_name:
          type: string
          example: Premium
        role:
          type: string
          example: member
        payment_fee:
          type: integer
          example: 720
        round_info:
          $ref: '#/components/schemas/RoundInfo'
        round_id:
          type: integer
          example: 3
        admin:
          $ref: '#/components/schemas/Admin'
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    RoundInfo:
      type: object
      properties:
        payment_deadline:
          type: string
          example: 2021/11/10
        round_interval:
          type: integer
          example: 5
        starting_time:
          type: string
          example: 2021/06/17
        ending_time:
          type: string
          example: 2021/11/17
    PaymentStatus:
      type: string
      enum:
        - unpaid
        - pending
        - confirmed
    RoomStatus:
      type: string
      enum:
        - created
        - start
        - end