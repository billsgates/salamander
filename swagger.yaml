openapi: 3.0.0
info:
  description: Salamander is the backend api server for HermitCrab.
  version: 1.0.1
  title: Salamander api server
servers:
  - url: http://localhost:5000/api/v1
tags:
  - name: auth
    description: Authentication
  - name: users
    description: Users
  - name: rooms
    description: Rooms
  - name: services
    description: Services
paths:
  /auth/signup:
    post:
      tags:
        - auth
      summary: sign up
      description: ''
      operationId: signUp
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        "201":
          description: successfully created
  /auth/signin:
    post:
      tags:
        - auth
      summary: sign in
      description: ''
      operationId: signIn
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /users:
    get:
      tags:
        - users
      summary: get users
      description: ''
      operationId: getUsers
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      tags:
        - users
      summary: get user by id
      description: ''
      operationId: getUser
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - users
      summary: update user info
      description: ''
      operationId: updateUser
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
                type: object
                properties:
                  name: 
                    type: string
                    example: Carolyn
                  email:
                    type: string
                    example: Carolyn@example.com
                  image_url:
                    type: string
                    format: url
      responses:
        "201":
          description: successfully update user
  /rooms:
    post:
      tags:
        - rooms
      summary: create a room
      description: ''
      operationId: createRoom
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
      responses:
        "201":
          description: successfully created a room
    get:
      tags:
        - rooms
      summary: get current joined rooms and status
      description: ''
      operationId: getMenuInfo
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsResponse'
  /rooms/{id}:
    get:
      tags:
        - rooms
      summary: get room info by room id
      description: ''
      operationId: getRoom
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomInfoResponse'
    patch:
      tags:
        - rooms
      summary: update room info by room id
      description: ''
      operationId: updateRoom
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
      responses:
        "201":
          description: successfully update room
  /rooms/{id}/start:
    patch:
      tags:
        - rooms
      summary: set start date of room 
      description: ''
      operationId: updateRoomStartDate
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date: 
                  type: string
                  format: date-time
                  example: 2020-1-1
                is_add_canlendar:
                  type: boolean
                  example: true
      responses:
        "201":
          description: successfully set room start Date
  /rooms/{id}/invitation:
    post:
      tags:
        - rooms
      summary: generate invitation code
      description: ''
      operationId: postInvitationCode
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Room ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
  /rooms/join:
    post:
      tags:
        - rooms
      summary: join room by invitation code
      description: ''
      operationId: joinRoom
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomJoinRequest'
      responses:
        "200":
          description: OK
  /services:
    get:
      tags:
        - services
      summary: get services
      description: ''
      operationId: getServices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
  /services/{id}:
    get:
      tags:
        - services
      summary: get service plans by id
      description: ''
      operationId: getServicesPlan
      parameters:
        - in: path
          name: id
          description: Service ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
  /participant:
    delete:
      tags:
        - participant
      summary: delete participant from rooms
      description: ''
      operationId: deleteParticipant
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                room_id:
                  type: integer
                  example: 2
      responses:
        "204":
          description: successfully delete participant from rooms
  /participant/status:
    patch:
      tags:
        - participant
      summary: change parcipant payment status
      description: ''
      operationId: updateParticipantStatus
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
                type: object
                properties:
                  userId: 
                    type: integer
                    example: 1
                  roomId:
                    type: integer
                    example: 2
                  status:
                    $ref: '#/components/schemas/PaymentStatus'
      responses:
        "201":
          description: successfully update participant payment status

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: kevin yu
        email:
          type: string
          format: email
          example: kevin@ntu.im
        password_digest:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzEwMzgyMjQuNzQ0MzI0MiwidXNlciI6eyJJRCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIsIlVzZXJuYW1lIjoiemhhc2hrZXZ5Y2giLCJQYXNzd29yZCI6IjQyODYwMTc5ZmFiMTQ2YzZiZDAyNjlkMDViZTM0ZWNmYmY5Zjk3YjUifX0.3dsyKJQ-HZJxdvBMui0Mzgw6yb6If9aB8imGhxMOjsk
        rating:
          type: integer
          example: 5
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    SignupRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - name
      - email
      - password
      example:
        name: test
        email: test@ntu.im
        password: test
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
      example:
        email: kevin@ntu.im
        password: kevin
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzEwMzgyMjQuNzQ0MzI0MiwidXNlciI6eyJJRCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIsIlVzZXJuYW1lIjoiemhhc2hrZXZ5Y2giLCJQYXNzd29yZCI6IjQyODYwMTc5ZmFiMTQ2YzZiZDAyNjlkMDViZTM0ZWNmYmY5Zjk3YjUifX0.3dsyKJQ-HZJxdvBMui0Mzgw6yb6If9aB8imGhxMOjsk
    Room:
      type: object
      properties:
        id:
          type: integer
          example: 1
        announcement:
          type: string
        is_public:
          type: boolean
        room_status:
          $ref: '#/components/schemas/RoomStatus'
        starting_time:
          type: string
          format: date-time
        ending_time:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        max_count:
          type: integer
          example: 5
        admin_id:
          type: integer
          example: 1
        service_id:
          type: integer
          example: 1
        plan_name:
          type: string
          example: Premium
    RoomRequest:
      type: object
      properties:
        max_count:
          type: integer
        admin_id:
          type: integer
        service_id:
          type: integer
        plan_name:
          type: string
        payment_period:
          format: month
          type: integer
        is_public:
          type: boolean
        announcement:
          type: string
      required:
      - max_count
      - service_id
      - plan_name
      - payment_period
      - is_public
      example:
        max_count: 5
        service_id: 1
        plan_name: Premium
        payment_period: 12
        is_public: true
    RoomJoinRequest:
      type: object
      properties:
        invitation_code:
          type: string
      required:
      - invitation_code
    Service:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Netflix
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Participation:
      type: object
      properties:
        user_id:
          type: integer
        room_id:
          type: integer
        is_host:
          type: boolean
      required:
      - user_id
      - room_id
      - is_host
      example:
        max_count: 1
        service_id: 1
        plan_name: true
    Admin:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        rating:
          type: integer
        phone:
          type: string
      example:
        name: Kevin Yu
        email: kevin@ntu.im
        rating: 4
        phone: 0912345678
    Member:
      type: object
      properties:
        user_id:
          type: integer
        user_name:
          type: string
        payment_status:
          $ref: '#/components/schemas/PaymentStatus'
      example:
        user_id: 1
        user_name: Frank Chen
        payment_status: unpaid
    RoomItem:
      type: object
      properties:
        room_id:
          type: integer
          example: 1
        service_name:
          type: string
          example: Netflix
        plan_name:
          type: string
          example: Premium
        is_host:
          type: boolean
          example: true
        cost:
          type: integer
          example: 720
        payment_status:
          $ref: '#/components/schemas/PaymentStatus'
        room_status:
          $ref: '#/components/schemas/RoomStatus'
    RoomsResponse:
      type: array
      items:
        $ref: '#/components/schemas/RoomItem'
    RoomInfoResponse:
      type: object
      properties:
        room_id:
          type: integer
          example: 1
        is_public:
          type: boolean
          example: false
        announcement:
          type: string
          example: Hi! This is the announcement from administrator
        max_count:
          type: integer
          example: 4
        payment_period:
          type: integer
          format: month
          example: 6
        room_status:
          $ref: '#/components/schemas/RoomStatus'
        starting_time:
          type: string
          format: date-time
          example: 2021-1-1
        ending_time:
          type: string
          format: date-time
          example: 2021-6-1
        service_name:
          type: string
          example: Netflix
        plan_name:
          type: string
          example: Premium
        role:
          type: string
          example: member
        payment_fee:
          type: integer
          example: 720
        admin:
          $ref: '#/components/schemas/Admin'
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    PaymentStatus:
      type: string
      enum:
        - unpaid
        - pending
        - confirmed
    RoomStatus:
      type: string
      enum:
        - created
        - start
        - end