openapi: 3.0.0
info:
  description: Salamander is the backend api server for HermitCrab.
  version: 1.0.1
  title: Salamander api server
servers:
  - url: http://localhost:5000/api/v1
tags:
  - name: auth
    description: Authentication
  - name: users
    description: Users
  - name: rooms
    description: Rooms
  - name: services
    description: Services
paths:
  /auth/signup:
    post:
      tags:
        - auth
      summary: sign up
      description: ''
      operationId: signUp
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        "201":
          description: successfully createds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/signin:
    post:
      tags:
        - auth
      summary: sign in
      description: ''
      operationId: signIn
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /users:
    get:
      tags:
        - users
      summary: get users
      description: ''
      operationId: getUsers
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      tags:
        - users
      summary: get user by id
      description: ''
      operationId: getUser
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /rooms:
    post:
      tags:
        - rooms
      summary: create a room
      description: ''
      operationId: createRoom
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomCreateRequest'
      responses:
        "200":
          description: successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
  /services:
    get:
      tags:
        - services
      summary: get services
      description: ''
      operationId: getServices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
  /services/{id}:
    get:
      tags:
        - services
      summary: get service plans by id
      description: ''
      operationId: getServicesPlan
      parameters:
        - in: path
          name: id
          description: Service ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: kevin yu
        email:
          type: string
          format: email
          example: kevin@ntu.im
        password_digest:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzEwMzgyMjQuNzQ0MzI0MiwidXNlciI6eyJJRCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIsIlVzZXJuYW1lIjoiemhhc2hrZXZ5Y2giLCJQYXNzd29yZCI6IjQyODYwMTc5ZmFiMTQ2YzZiZDAyNjlkMDViZTM0ZWNmYmY5Zjk3YjUifX0.3dsyKJQ-HZJxdvBMui0Mzgw6yb6If9aB8imGhxMOjsk
        rating:
          type: integer
          example: 5
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    SignupRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        required:
        - name
        - email
        - password
      example:
        name: kevin yu
        email: kevin@ntu.im
        password: passworda
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        required:
        - email
        - password
      example:
        email: kevin@ntu.im
        password: mypassword
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzEwMzgyMjQuNzQ0MzI0MiwidXNlciI6eyJJRCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIsIlVzZXJuYW1lIjoiemhhc2hrZXZ5Y2giLCJQYXNzd29yZCI6IjQyODYwMTc5ZmFiMTQ2YzZiZDAyNjlkMDViZTM0ZWNmYmY5Zjk3YjUifX0.3dsyKJQ-HZJxdvBMui0Mzgw6yb6If9aB8imGhxMOjsk
    Room:
      type: object
      properties:
        id:
          type: integer
          example: 1
        account_name:
          type: string
        account_password:
          type: string
        starting_time:
          type: string
          format: date-time
        ending_time:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        max_count:
          type: integer
          example: 5
        admin_id:
          type: integer
          example: 1
        service_id:
          type: integer
          example: 1
        plan_name:
          type: string
          example: Premium
    RoomCreateRequest:
      type: object
      properties:
        max_count:
          type: integer
        admin_id:
          type: integer
        service_id:
          type: integer
        plan_name:
          type: string
        required:
        - max_count
        - service_id
        - plan_name
      example:
        max_count: 5
        service_id: 1
        plan_name: Premium
    Service:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Netflix
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ParticipationCreateRequest:
      type: object
      properties:
        user_id:
          type: integer
        room_id:
          type: integer
        is_host:
          type: boolean
        required:
        - user_id
        - room_id
        - is_host
      example:
        max_count: 1
        service_id: 1
        plan_name: true
