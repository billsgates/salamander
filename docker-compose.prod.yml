version: '3.1'

services:
  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/app.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backend:
    image: golang:1.16.2-alpine
    container_name: backend
    restart: always
    volumes:
      - .:/server
    working_dir: /server/go-server
    expose:
      - 5000
    entrypoint: go run cmd/main.go
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=hermitcrab5566
    volumes:
      - ./db/mysql-init-scripts:/docker-entrypoint-initdb.d
      - /mnt/disks/sdb/docker/salamander/mysql/datadir:/var/lib/mysql
    expose:
      - 3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 10

  mysql-adminer:
    image: adminer
    container_name: mysql-adminer
    restart: always
    expose:
      - 8080
    depends_on:
      mysql:
        condition: service_healthy
  
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    expose:
      - 8080
    volumes:
      - ./swagger.yaml:/usr/share/nginx/html/swagger/swagger.yaml
    environment:
      API_URL: swagger/swagger.yaml
    depends_on:
      mysql:
        condition: service_healthy
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    expose:
      - 5672
      - 15672
    volumes:
      - /mnt/disks/sdb/docker/salamander/rabbitmq/data/:/var/lib/rabbitmq/
      - /mnt/disks/sdb/docker/salamander/rabbitmq/log/:/var/log/rabbitmq
