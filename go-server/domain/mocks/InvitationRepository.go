// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// InvitationRepository is an autogenerated mock type for the InvitationRepository type
type InvitationRepository struct {
	mock.Mock
}

// ConsumeInvitationCode provides a mock function with given fields: ctx, code
func (_m *InvitationRepository) ConsumeInvitationCode(ctx context.Context, code string) (int32, error) {
	ret := _m.Called(ctx, code)

	var r0 int32
	if rf, ok := ret.Get(0).(func(context.Context, string) int32); ok {
		r0 = rf(ctx, code)
	} else {
		r0 = ret.Get(0).(int32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenerateInvitationCode provides a mock function with given fields: ctx, roomId, code
func (_m *InvitationRepository) GenerateInvitationCode(ctx context.Context, roomId int32, code string) error {
	ret := _m.Called(ctx, roomId, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int32, string) error); ok {
		r0 = rf(ctx, roomId, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ResumeInvitationCode provides a mock function with given fields: ctx, code
func (_m *InvitationRepository) ResumeInvitationCode(ctx context.Context, code string) error {
	ret := _m.Called(ctx, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
